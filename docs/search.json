[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About Haddi",
    "section": "",
    "text": "Hi! My name is Haddi and I am a senior in college! I created this page for my intro to data science class. I enjoy hiking, dancing, and hanging out with my friends."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "shades.html",
    "href": "shades.html",
    "title": "Makeup Shades",
    "section": "",
    "text": "Foundation Shade Names\n\nThis data was provided by Amber Thomas to produce an article in collaboration with Pudding written by Ofunne Amaka. The article talks about how the names of shades in complexion products reveal bias. The code written by Amber Thomas uses the Sephora and Ulta websites to gather information about various shade names of complexion products from various companies. In order to analyze how similar shades of the same names were to each other, I used the tidy tuesday data that can be found here.\n\n\nCode\n# loading necessary packages and data\nlibrary(tidyverse)\nshades &lt;-read.csv(\"shades data/allShades.csv\")\n\n\n\n\nCode\necho = FALSE\n\n# beginning data wrangling\n# get the most frequent shade names\nspecific_shades &lt;- shades |&gt;\n  group_by(name) |&gt;\n  filter(!is.na(name)) |&gt;\n  summarize(freq = n()) |&gt;\n  filter(freq &gt; 60) |&gt;\n  distinct()\n\n\n\n\nCode\nshades |&gt;\n  filter(name == \"Deep\" | name == \"Fair\" |  name == \"Light\" |\n        name == \"Medium\" | name == \"Neutral\" | name == \"Warm\") |&gt;\n  ggplot(aes(x = hue, y = lightness, color = name)) +\n    geom_point() +\n    labs(\n      x = \"Hue\",\n      y = \"Lightness\",\n      title = \"Hue and Lightness of Makeup Shades with Same Shade Name\", \n      color = \"Name of Shade\"\n    ) +\n    theme_classic() +\n    facet_wrap(~name)\n\n\n\n\n\nI used hue and lightness to compare the shade matches between foundation shades with the same name. The lightness and hue are clustered pretty well for shades like light and fair but get worse as you approach medium and are not very good for the deep shades. While shades named after undertones like neutral and warm have poor clusters. This validates a lot of complaints by women about inconsistency in shade names across different brands."
  },
  {
    "objectID": "phd.html",
    "href": "phd.html",
    "title": "PHD’s Awarded in the US",
    "section": "",
    "text": "PhD’s Awarded in the US\n\nThis data set was acquired from the National Center of Science and Engineering Statistics. Kelly Kang, a project officer compiled demographic information, educational history, sources of financial support, and post graduation plans of doctoral recepients. The link to this original data can be found here. Then I used a tidy data set from github. Using this data set, I chose to analyze which broad fields were awarding the most PhDs over the years.\n\n\nCode\n# loading necessary packages\nlibrary(tidyverse)\n\n\n\n\nCode\n# beginning data wrangling\n\n#load csv files into data frame that I can work with\nphds &lt;- read.csv(\"phd_by_field.csv\")\n\nphds |&gt;\n  group_by(broad_field, year) |&gt;\n  filter(!is.na(n_phds)) |&gt;\n  summarize(tot_phds = sum(n_phds), year) |&gt;\n  distinct() |&gt;\n  ggplot(aes(x = year, y = tot_phds, color = broad_field)) +\n    geom_smooth(se = FALSE) +\n    theme_classic() +\n    labs(\n      x = \"Year\",\n      y = \"PHD's Awarded\",\n      title = \"PHD's Awarded in Various Fields\",\n      color = \"Broad Field of PHD\"\n    )\n\n\n\n\n\nLife sciences awards the most PhDs by a healthy margin and it looks like the amount being awarded is still on an increasing trend. Engineering has the least PhDs awarded per year by broad field but it looks like the amount of engineering PhDs being awarded is increasing. Education PhD’s were on a decline but it looks like they are beginning to level off around 5000 PhDs awarded every year. More psychology and social sciences PhDs are being awarded each year."
  },
  {
    "objectID": "characanalysis.html",
    "href": "characanalysis.html",
    "title": "Analyzing Friends Dialogue",
    "section": "",
    "text": "Analyzing Friends Dialogue\n\nThis data was obtained from user EmilHvitfeldt on Github. You can find the link &lt;a friends/data at master · EmilHvitfeldt/friends · GitHub&gt;here. I will use the data to analyze how much they mention dating over the years of the show being aired and how viewership varies based on the name of the main character in the title of the episode.\n\n\nCode\n# load packages\nlibrary(tidyverse)\n\n\n\n\nCode\n# load data sets \nload(file=\"friendsdata/friends.rda\")\nload(file=\"friendsdata/friends_info.rda\")\n\n\n\n\nCode\n# how many times is the word date, dating, or dated is said per episode depending on the year\n\nbasic_info &lt;- friends_info |&gt;\n  mutate(year_aired = str_sub(air_date, 1,4))|&gt;\n  group_by(year_aired)|&gt;\n  mutate(numepyear = n()) |&gt;\n  select(season, episode, year_aired, numepyear)\n\nfriend_date &lt;- friends |&gt;\n  left_join(basic_info, by = c(\"season\", \"episode\")) |&gt;\n  group_by(year_aired) |&gt;\n  filter(str_detect(text, \"(?i)\\\\bdate|dating\\\\b\") == TRUE) |&gt;\n  summarise(date_ment = n(), numepyear)  |&gt;\n  distinct() |&gt;\n  mutate(datepeppyear = date_ment/numepyear)\n\nggplot(friend_date, aes(x = year_aired, y = datepeppyear)) +\n  geom_col() +\n  theme_bw() +\n  labs(\n    x = \"Year Aired\",\n    y = \"Number of times date said per episode\",\n    title = \"Concept of Dating Mentioned Over the Years in Friends Dialogue\"\n  )\n\n\n\n\n\nIn 1995,1996, 1998, and 1999 the word date was said a lot less often in friends. I have never watched friends but I assume that during these years, the main characters were in more long term relationships. This is probably why we see a dip in 2004 as well because they are wrapping up the show and giving the characters happy endings with a partner. Again this paragraph is written by someone who has never watched friends.\n\n\nCode\n# in the titles how common is it for a main character to get mentioned\n\nmain &lt;- friends_info |&gt;\n  filter(str_detect(title,\"The One\") == TRUE) |&gt;\n  mutate(title = str_replace(title, \"The One \", \"The One:\")) |&gt;\n  mutate(spec_title = str_extract(title, \"(?&lt;=:).+\"))|&gt;\n  mutate(main_char = if_else(str_detect(spec_title, \n                                \"(?i)\\\\bchandler|monica|joey|phoebe|rachel|ross\\\\b\"), str_extract(spec_title, \n                                \"(?i)\\\\bchandler|monica|joey|phoebe|rachel|ross\\\\b\"), \"None\"))\n  \n\nggplot(main, aes(fill = main_char, x = main_char, y = us_views_millions)) +\n  geom_boxplot() +\n  theme_bw() +\n  labs(x = \"Main Character in Title\",\n       y = \"Episode Views in millions\",\n       title = \"Friends Episode Viewership Based on Main Character in Title\") \n\n\n\n\n\nHaving some characters names in the title leads to a higher mean of viewers like Monica and Chandler but having Ross’ name in the title leads to a lower mean of viewers. Having the other main characters names in the tile leads to a similar mean value as having no main character name in the title at all. Overall there is a lot of overlap and the differences are not that significant. If I had a show and I wanted to know if putting certain characters names in the titles lead to more views than I would appreciate that knowledge."
  }
]